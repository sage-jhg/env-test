name: Envs

on: 
  workflow_dispatch:
  # push:
  #   branches:
  #     - master
env:
  ROLE_NAME: ${{ vars.ROLE_NAME }}
jobs:
    setenv:
        runs-on: ubuntu-latest
        permissions: read-all
        outputs:
            environments: ${{ steps.set_channel.outputs.environments }}
        steps:
          - name: Set Channel
            id: set_channel
            run: |
                case "${{ github.ref_name }}" in
                main)
                    environments="['Dev 1','Test','Integration']"
                    ;;
                Dev1)
                    environments="['Dev 1']"
                    ;;
                test)
                    environments="['Test']"
                    ;;
                *)
                    environments="['Integration']"
                    ;;
                esac
                echo "environments=${environments}" >> "$GITHUB_OUTPUT"
          - name: print environment
            run: echo ${{ steps.set_channel.outputs.environments }}
    print:
        if: ${{ always() }}
        runs-on: windows-2022
        needs:
            - setenv
        strategy:
            fail-fast: false
            matrix:
                env: ${{ fromJSON(needs.setenv.outputs.environments) }}
        environment: ${{ matrix.env }}
        env:
            ENV_NAME: ${{ vars.ENV_NAME }}
        steps:
            - uses: actions/checkout@v4
              if: ${{ matrix.env != 'Integration' }}            
            - name: print env
              if: ${{ matrix.env != 'Test' }} 
              run: |
                aws --version
                echo "${{ matrix.env }}"
                echo "${{ env.ENV_NAME }}"
                [System.TimeZoneInfo]::ConvertTimeBySystemTimeZoneId([DateTime]::Now,"AUS Eastern Standard Time").ToString("yyyyMMdd.HHmmss")
                get-date -format "yyyyMMdd.HHmmss"
        