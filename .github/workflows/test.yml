name: ðŸšš Extra

on: 
  workflow_dispatch:
  # push:
  #   branches:
  #     - master
env:
  ROLE_NAME: ${{ vars.ROLE_NAME }}
jobs:
  setenv:
    runs-on: windows-latest
    outputs:
      service_env: ${{ steps.envmatrix.outputs.service_env }}
    steps:
      - name: ðŸ”¸ Output environment matrix
        id: envmatrix
        run: |
          echo "service_env=${{ vars.SERVICE_ENV_TEST }}" >> $env:GITHUB_OUTPUT
          echo "${{ env.ROLE_NAME }}"
  build:
    runs-on: windows-2022
    needs:
      - setenv
    strategy:
      fail-fast: false
      matrix:
        env: ${{ fromJSON(needs.setenv.outputs.service_env) }}
    environment: ${{ matrix.env }}
    outputs:
      image_tag: ${{ steps.output-tags.outputs.image_tag}}
    env:
      ENV_NAME: ${{ vars.ENV_NAME }}
      ROLE_NAME: ${{ vars.ROLE_NAME }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v4
      - name: pwd
        run: |
          pwd
          ls
          echo "${{ env.ROLE_NAME }}"
      - name: build
        id: output-tags
        run: |
          cd Docker
          #docker build -t ${{ env.ENV_NAME }}:${{ env.IMAGE_TAG }} .
          echo "image_tag=${{ env.ENV_NAME }}:${{ env.IMAGE_TAG }}" >> $env:GITHUB_OUTPUT
          echo "- TAG: **image_tag=${{ env.ENV_NAME }}:${{ env.IMAGE_TAG }}**" >> $env:GITHUB_STEP_SUMMARY
  print:
    runs-on: windows-2022
    needs:
      - setenv
      - build
    strategy:
      fail-fast: false
      matrix:
        env: ${{ fromJSON(needs.setenv.outputs.service_env) }}
    environment: ${{ matrix.env }}
    steps:
      - name: output tags
        run: echo ${{ needs.build.outputs.image_tag}}
        